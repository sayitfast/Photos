@model AlbumDetailsViewModel

@inject UserManager<ApplicationUser> userManager

@{var currentUser = userManager.GetUserAsync(User).Result;}

<div class="row">

	<div class="col-md-4 a_info">

		<div class="row">

			<div class="col-md-4 text-center" style="margin-top: 5px;">

				@if (Model.Creator.ProfilePicture != null)
				{
					<img src="~/uploads/@Model.Creator.Id/@Model.Creator.ProfilePicture" class="img-responsive text-center" />
				}
				else
				{
					<img src="~/images/no-profile-image.jpg" class="img-responsive text-center" />
				}

			</div>

			<div class="col-md-8 text-center">
				<h3>@Model.Creator.FirstName @Model.Creator.LastName</h3>
				<p>@Model.Creator.Location</p>
			</div>

		</div>

		<hr style="border: 1px solid gray;" />

		<div class="row">

			<div class="text-center">
				<h2>@Model.Name</h2>
				<p>@Model.Description</p>
			</div>
		</div>

		<hr />

		<div class="row a_comments">

			@if (Model.Comments.Count > 0)
			{
				@foreach (var comment in Model.Comments)
				{
					<div class="c_details">
						<div>
							<p><strong>@comment.Author.FirstName @comment.Author.LastName</strong>: @comment.Content</p>
						</div>
					</div>
				}
			}

			<br />

			@using (Html.BeginForm<AlbumsController>(c => c.Comment(), FormMethod.Post))
			{
				@Html.HiddenFor(m => m.Id)
				@Html.ValidationMessageFor(m => m.PostComment.Content)
				@Html.TextAreaFor(m => m.PostComment.Content, new { @class = "form-control", @placeholder = "Comment", @style = "margin-top: 5px" })
				<input type="submit" name="submit" value="Post" id="post-comment" class="btn btn-default btn-lg pull-left" style="margin-top: 2px; margin-bottom: 5px;" />
				<hr />
			}
		</div>

		@if (User.Identity.IsAuthenticated)
		{
			@if (Model.Creator.Id == currentUser.Id)
			{
				<a href="@(Url.Action("Edit", "Albums",new { @albumId = Model.Id, @userId = Model.Creator.Id}))" class="pull-left" style="margin-bottom: 10px;" title="Edit album">
					<span class="glyphicon glyphicon-cog" style="color: gray;"></span>
				</a>
			}

		}
		<div>

		</div>

	</div>

	<div class="col-md-8 a_images">
		@if (Model.Images.Count == 0)
		{
			<h1 class="text-center">@Model.Name does not have images</h1>
		}
		else
		{
			@foreach (var image in Model.Images)
			{
				<div class="col-md-3 a_image">
					<img src="~/uploads/@image.Path" class="img-responsive" style="margin-top: 10px;" />
					<br />
					<div class="row">
						<div class="col-md-6 col-md-offset-3 text-center">
							<a href="@(Url.Action("Like", "Image", new { @imageId = image.Id, @albumId = Model.Id}))">
								<span class="glyphicon glyphicon-chevron-left"></span>
							</a>
							<span><strong>@image.Rating</strong></span>
							<a href="@(Url.Action("Dislike", "Image", new { @imageId = image.Id, @albumId = Model.Id}))">
								<span class="glyphicon glyphicon-chevron-right"></span>
							</a>
						</div>
					</div>
					<br />
				</div>
			}

		}
	</div>

</div>
